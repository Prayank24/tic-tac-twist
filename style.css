/* Basic reset so things line up nicely */
* { box-sizing: border-box; margin: 0; padding: 0; }

body {
  font-family: system-ui, sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
}

#board {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(3, 100px);
  gap: 4px;
}

.cell {
  width: 100px;
  height: 100px;
  border: 2px solid #333;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 64px;   /* big X / O later */
  cursor: pointer;
}

#undoBtn {
  padding: 0.5rem 1rem;
  font-size: 1rem;
}
/* Optional: dim a cell after it’s filled (makes FIFO pop‑offs obvious) */
.cell.filled { color: #111; }

/* Optional: green/red winner flash later */
.win { background: #c8ffc8; }
/* Step 3 additions  ─────────────────────────────────────────── */

.cell:hover {
    background: #f4f4f4;            /* light highlight on hover */
  }
  
  #message {
    font-weight: 600;
    min-height: 1.5em;              /* keeps layout steady */
  }
  
  #undoBtn:disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
 /* ========== Layout for board + rules ========== */
#gameArea {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
  }
  
  /* Rules panel */
  #rules {
    max-width: 220px;
    font-size: 0.9rem;
    line-height: 1.4;
  }
  #rules h2 {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
  }
  
  /* ========== Strike‑through bar ========== */
  #board { position: relative; }   /* make strike absolute inside */
  #strike {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 6px;
    background: crimson;
    border-radius: 3px;
    transform-origin: left center;
    display: none;                /* shown only on win */
  }
  
  /* Per‑cell strike‑through (backup for accessibility) */
  .win-cell { text-decoration: line-through solid crimson 4px; }
   /* ───── THEME VARIABLES ───── */
:root {
    --bg: #ffffff;
    --text: #000000;
    --cell-border: #333;
    --x-color: #000000;
    --o-color: #000000;
  }
  
  body.dark {
    --bg: #0e0e0e;
    --text: #e4e4e4;
    --cell-border: #666;
    --x-color: #ff2eea;   /* neon pink */
    --o-color: #00eaff;   /* neon cyan */
  }
  
  body {
    background: var(--bg);
    color: var(--text);
  }
  
  /* Apply colors */
  .cell {
    border: 2px solid var(--cell-border);
    color: var(--text);          /* fallback */
  }
  body.dark .cell.filled {
    text-shadow: 0 0 6px currentColor;
  }
  body.dark .cell[data-player="X"] { color: var(--x-color); }
  body.dark .cell[data-player="O"] { color: var(--o-color); }
  
  /* Strike bar adapts */
  #strike { background: var(--o-color); }
  
  /* ───── Toggle switch styling ───── */
  .switch {
    display: inline-flex;
    align-items: center;
    gap: .4rem;
    font-size: .9rem;
    cursor: pointer;
    user-select: none;
  }
  
  .switch input { display: none; }
  
  .switch .slider {
    width: 36px;
    height: 18px;
    background: #bbb;
    border-radius: 10px;
    position: relative;
    transition: background .2s;
  }
  
  .switch .slider::before {
    content: "";
    position: absolute;
    width: 14px;
    height: 14px;
    background: #fff;
    border-radius: 50%;
    top: 2px;
    left: 2px;
    transition: transform .2s;
  }
  
  .switch input:checked + .slider {
    background: #4ade80;           /* green */
  }
  
  .switch input:checked + .slider::before {
    transform: translateX(18px);
  }
  